HTML CODE:

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather App</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div id="weather-container">
        <h1 id="name">Weather App</h1>
        <form id="location-form">
            <input type="text" id="location-input" placeholder="Enter the city" oninput="handleOnChange(this)">
            <button type="submit">Get Weather</button>
        </form>
        <div id="weather-data"></div>
    </div>
    <script src="script.js"></script>
</body>
</html>

CSS CODE:  

/* Write your desired css here */
*{
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body{
    height: 100dvh;
    width: 100dvw;
    text-align: center;
    padding-block: 2rem;
    background: linear-gradient(to bottom,rgba(174, 213, 253, 0.822),rgba(5, 5, 237, 0.756));
    color: white;
}

#weather-container{
    margin-inline: auto;
    margin-top: 2rem;
    box-shadow: 1px 1px 20px 1px, -1px -1px 1px 1px;
    border-radius: 0.6rem;
    padding: 1rem;
    width: max(50vw, 320px);
    display: flex;
    flex-direction: column;
    gap: 1rem;
    background: transparent;
}

#name{
    color: navy;
    letter-spacing: 3px;
    font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
}

#location-form{
    display: flex;
    flex-direction: column;
    gap: 1rem;
    align-items: center;
}

#location-input{
    font-size: 1.3rem;
    padding: 0.3rem 0.5rem;
    width: 100%;
    border: 2px solid black;
    border-radius: 0.3rem;
    outline: none;
    transition: all 0.3s ease-in-out;
}

#location-input:focus{
    border-color:rgba(5, 5, 237, 0.756);
}

button{
    font-weight: 600;
    font-size: 0.9rem;
    padding: 0.5rem 1rem;
    cursor: pointer;
    background: rgba(249, 89, 31, 0.769);
    color: white;
    border: none;
    border-top-left-radius: 5px;
    border-bottom-right-radius: 5px;
    transition: all 0.3s ease-in-out;
}

button:hover{
    background: rgb(227, 61, 0);
}

#weather-data{
    display: flex;
    flex-direction: column;
    overflow: hidden;
    align-items: center;
    justify-content: center;
    gap: 0.3rem;
    height: 0px;
    transition: all 0.3s ease-in;
}

.isOpen{
    height: fit-content !important;
}

.error-msg{
    font-size: 1.2rem;
    font-weight: 600;
    color: rgb(255, 3, 3); 
}

JAVASCRIPT CODE:  

async function getWeather(city) {
  const API_KEY = "0cce174fa93ce03a582e635ddbf39d3f";
  const apiURL = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`;

  const weatherElement = document.querySelector("#weather-data");

  await fetch(apiURL)
    .then((response) => response.json())
    .then((data) => {
      const { name, main, visibility, wind, weather } = data;
      const temperature = main?.temp;
      const description = weather[0]?.description;
      const windSpeed = wind?.speed;

      const weatherContent = `
      <p>City: ${name} </p>
      <p>Temp: ${temperature} Â°C</p>
      <p>Visibility: ${visibility} </p>
      <p>Wind Speed: ${windSpeed} KMPH </p>
      <p>Weather: ${description} </p>  
    `;

      weatherElement.innerHTML = weatherContent;
    })
    .catch((error) => {
      const weatherContent = `
      <p class='error-msg'>Error: City not found </p>
    `;
      weatherElement.innerHTML = weatherContent;
      setTimeout(() => {
        weatherElement.innerHTML = '';
        weatherElement.classList.toggle('isOpen');
      }, 2000);
    });

  weatherElement.classList.toggle('isOpen');
}

document.getElementById("location-form").addEventListener("submit", (e) => {
  e.preventDefault();

  const inputElement = document.querySelector("#location-input");
  const text = inputElement.value;
  inputElement.value = "";
  getWeather(text);
});

function handleOnChange(e) {
  if (e.value.length === 0) {
    const weatherElement = document.querySelector("#weather-data");
    weatherElement.innerHTML = "";
    weatherElement.classList.toggle('isOpen');
  }
}

const inputElement = document.getElementById('location-input');
inputElement.addEventListener('focus', () => {
  const weatherElement = document.querySelector("#weather-data");
  weatherElement.classList.remove('isOpen');
});

